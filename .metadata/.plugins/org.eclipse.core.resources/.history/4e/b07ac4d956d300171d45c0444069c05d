package baekjoon;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;

public class B02230_수고르기 {
	public static void main(String[] args) throws IOException{
		NuM n = new NuM();
		
		n.input();
		System.out.println(n.solve());
	}
}


class NuM{
	int N;
	int M;
	HashSet<Integer> A = new HashSet<>();
	
	void input() throws IOException{
		Reader r = new Reader();
		
		N = r.nextInt();
		M = r.nextInt();
		
		for(int i=0;i<N;i++){
			A.add(r.nextInt());   // 중복 제거
		}
	}
	
	int solve(){
		ArrayList<Integer> AB = new ArrayList<>(A);
		Collections.sort(AB);
		
		int maxNum = AB.get(N-1); //리스트에서 가장 큰수
		
		int min = M;
		
		loop:
		for(;min< Integer.MAX_VALUE;min++){
			
			for(int i=0;i<N;i++){
				long t = AB.get(i) + min;
				if(t > maxNum) break;  // 다음 min으로 넘어감
				
				else{
					if(A.contains((int)t) == true){
						break loop;   // loop자체를 끝냄 - 찾기 성공
					}
				}
			}
			
		}
		
		return min;
	}
	
	
	
}